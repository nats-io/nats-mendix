// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package natsconnectormodule.proxies;

public class ConnectionOptions
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject connectionOptionsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NatsConnectorModule.ConnectionOptions";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Server("Server"),
		ConnectionTimeoutMillis("ConnectionTimeoutMillis"),
		Credentials("Credentials");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ConnectionOptions(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected ConnectionOptions(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject connectionOptionsMendixObject)
	{
		if (connectionOptionsMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, connectionOptionsMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.connectionOptionsMendixObject = connectionOptionsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ConnectionOptions.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static natsconnectormodule.proxies.ConnectionOptions initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return natsconnectormodule.proxies.ConnectionOptions.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static natsconnectormodule.proxies.ConnectionOptions initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new natsconnectormodule.proxies.ConnectionOptions(context, mendixObject);
	}

	public static natsconnectormodule.proxies.ConnectionOptions load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return natsconnectormodule.proxies.ConnectionOptions.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Server
	 */
	public final java.lang.String getServer()
	{
		return getServer(getContext());
	}

	/**
	 * @param context
	 * @return value of Server
	 */
	public final java.lang.String getServer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Server.toString());
	}

	/**
	 * Set value of Server
	 * @param server
	 */
	public final void setServer(java.lang.String server)
	{
		setServer(getContext(), server);
	}

	/**
	 * Set value of Server
	 * @param context
	 * @param server
	 */
	public final void setServer(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String server)
	{
		getMendixObject().setValue(context, MemberNames.Server.toString(), server);
	}

	/**
	 * @return value of ConnectionTimeoutMillis
	 */
	public final java.lang.Long getConnectionTimeoutMillis()
	{
		return getConnectionTimeoutMillis(getContext());
	}

	/**
	 * @param context
	 * @return value of ConnectionTimeoutMillis
	 */
	public final java.lang.Long getConnectionTimeoutMillis(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.ConnectionTimeoutMillis.toString());
	}

	/**
	 * Set value of ConnectionTimeoutMillis
	 * @param connectiontimeoutmillis
	 */
	public final void setConnectionTimeoutMillis(java.lang.Long connectiontimeoutmillis)
	{
		setConnectionTimeoutMillis(getContext(), connectiontimeoutmillis);
	}

	/**
	 * Set value of ConnectionTimeoutMillis
	 * @param context
	 * @param connectiontimeoutmillis
	 */
	public final void setConnectionTimeoutMillis(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long connectiontimeoutmillis)
	{
		getMendixObject().setValue(context, MemberNames.ConnectionTimeoutMillis.toString(), connectiontimeoutmillis);
	}

	/**
	 * @return value of Credentials
	 */
	public final java.lang.String getCredentials()
	{
		return getCredentials(getContext());
	}

	/**
	 * @param context
	 * @return value of Credentials
	 */
	public final java.lang.String getCredentials(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Credentials.toString());
	}

	/**
	 * Set value of Credentials
	 * @param credentials
	 */
	public final void setCredentials(java.lang.String credentials)
	{
		setCredentials(getContext(), credentials);
	}

	/**
	 * Set value of Credentials
	 * @param context
	 * @param credentials
	 */
	public final void setCredentials(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String credentials)
	{
		getMendixObject().setValue(context, MemberNames.Credentials.toString(), credentials);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return connectionOptionsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final natsconnectormodule.proxies.ConnectionOptions that = (natsconnectormodule.proxies.ConnectionOptions) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
