// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package natsconnectormodule.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import io.nats.client.Connection;
import io.nats.client.JetStreamManagement;
import io.nats.client.api.StreamInfo;
import io.nats.client.api.StreamInfoOptions;
import io.nats.client.api.Subject;
import natsconnectormodule.impl.Vars;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import static natsconnectormodule.impl.Utils.toJson;

public class ActionManageGetSubjects extends CustomJavaAction<java.lang.String>
{
	private java.lang.String connectionId;
	private java.lang.String stream;
	private java.lang.String subjectFilter;

	public ActionManageGetSubjects(IContext context, java.lang.String connectionId, java.lang.String stream, java.lang.String subjectFilter)
	{
		super(context);
		this.connectionId = connectionId;
		this.stream = stream;
		this.subjectFilter = subjectFilter;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		ILogNode logger = Core.getLogger(getClass().getSimpleName());

		Connection conn = Vars.getConn(connectionId);
		JetStreamManagement jsm = conn.jetStreamManagement();

		String filter = subjectFilter == null || subjectFilter.isEmpty() ? ">" : subjectFilter;
		StreamInfo si = jsm.getStreamInfo(stream, StreamInfoOptions.builder().filterSubjects(filter).build());

		List<Subject> subjects = si.getStreamState().getSubjects();
		List<String> names = new ArrayList<>();
		for (Subject subject : subjects) {
			names.add(subject.getName());
		}
		Collections.sort(names);

		String json = toJson(names);
		logger.info(json);

		return json;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ActionManageGetSubjects";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
